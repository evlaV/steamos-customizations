print_grub_config ()
{
    local -r rootfs_uuid=${1:-}
    local -r kernel=${2:-/boot/vmlinuz}
    local -r initrd=${3:-/boot/initramfs.img}
    local -r ucode=${4:-}
    sed -r \
        -e "s^%rootfs-uuid%^${rootfs_uuid}^g;" \
        -e "s^%kernel%^${kernel}^g;" \
        -e "s^%initrd%^${initrd}^g;" \
        -e "s^%ucode%^${ucode}^g;" <<'EOF'
#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
insmod part_gpt
insmod part_msdos
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function recordfail {
  set recordfail=1
  # GRUB lacks write support for btrfs, so recordfail support is disabled.
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

set menu_color_normal=light-gray/black
set menu_color_highlight=light-magenta/black

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod ext2
insmod btrfs
search --no-floppy --fs-uuid --set=root %rootfs-uuid%
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_input console
terminal_output gfxterm
insmod part_gpt
insmod ext2
insmod btrfs
search --no-floppy --fs-uuid --set=root %rootfs-uuid%
insmod gfxmenu
loadfont ($root)/usr/share/grub/themes/breeze/unifont-bold-16.pf2
loadfont ($root)/usr/share/grub/themes/breeze/unifont-regular-14.pf2
loadfont ($root)/usr/share/grub/themes/breeze/unifont-regular-16.pf2
loadfont ($root)/usr/share/grub/themes/breeze/unifont-regular-32.pf2
insmod png
set theme=($root)/usr/share/grub/themes/breeze/theme.txt
export theme
if [ "${recordfail}" = 1 ] ; then
  set timeout=0
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=menu
    set timeout=0
  # Fallback normal timeout code in case the timeout_style feature is
  # unavailable.
  else
    set timeout=0
  fi
fi
if [ $grub_platform = efi ]; then
  set timeout=0
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=menu
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
	set gfxpayload="${1}"
}
set linux_gfx_mode=keep
export linux_gfx_mode
menuentry 'SteamOS' --class steamos --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-%rootfs-uuid%' {
	recordfail
	load_video
	gfxmode $linux_gfx_mode
	insmod steamenv
	insmod gzio
	if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
	insmod part_gpt
	insmod ext2
	insmod btrfs
	search --no-floppy --fs-uuid --set=root %rootfs-uuid%
	steamenv_boot	linux %kernel% console=tty1 rd.luks=0 rd.lvm=0 rd.md=0 rd.dm=0 rd.systemd.gpt_auto=no loglevel=3 quiet splash plymouth.ignore-serial-consoles amd_iommu=off amdgpu.gttsize=8128 spi_amd.speed_dev=1 audit=0 fbcon=vc:4-6 fbcon=rotate:1
	initrd	%ucode% %initrd%
}
submenu 'Advanced options for SteamOS' $menuentry_id_option 'gnulinux-advanced-%rootfs-uuid%' {
	menuentry 'SteamOS, with Linux linux-neptune' --class steamos --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-linux-neptune-advanced-%rootfs-uuid%' {
		recordfail
		load_video
		gfxmode $linux_gfx_mode
		insmod steamenv
		insmod gzio
		if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
		insmod part_gpt
		insmod ext2
		insmod btrfs
		search --no-floppy --fs-uuid --set=root %rootfs-uuid%
		steamenv_boot	linux %kernel% console=tty1 rd.luks=0 rd.lvm=0 rd.md=0 rd.dm=0 rd.systemd.gpt_auto=no loglevel=3 quiet splash plymouth.ignore-serial-consoles amd_iommu=off amdgpu.gttsize=8128 spi_amd.speed_dev=1 audit=0 fbcon=vc:4-6 fbcon=rotate:1
		initrd	%ucode% %initrd%
	}
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/20_linux_xen ###
### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_efi-prober ###
### END /etc/grub.d/30_efi-prober ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
menuentry 'UEFI Firmware Settings' $menuentry_id_option 'uefi-firmware' {
	fwsetup
}
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg
fi
### END /etc/grub.d/41_custom ###

### BEGIN /etc/grub.d/99_reboot ###
menuentry "System halt" $menuentry_id_option 'system-halt' {
	halt
}

menuentry "System restart" $menuentry_id_option 'system-reboot' {
	reboot
}
### END /etc/grub.d/99_reboot ###

EOF
}
